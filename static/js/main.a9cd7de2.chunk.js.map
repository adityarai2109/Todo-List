{"version":3,"sources":["Todo.js","TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","style","textDecoration","todo","isCompleted","text","onClick","completeTodo","index","deleteTodo","TodoForm","useState","value","setValue","onSubmit","e","preventDefault","addTodo","type","placeholder","onChange","target","App","todos","setTodos","newTodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEe,SAASA,EAAKC,GAC3B,OACE,sBACEC,UAAU,OACVC,MAAO,CACLC,eAAgBH,EAAMI,KAAKC,YACvB,uBACA,QALR,UAQE,qBAAKJ,UAAU,UAAf,SAA0BD,EAAMI,KAAKE,OACrC,sBAAKL,UAAU,UAAf,UACE,wBAAQM,QAAS,kBAAMP,EAAMQ,aAAaR,EAAMS,QAAhD,SACGT,EAAMI,KAAKC,YAAc,OAAS,cAErC,wBAAQE,QAAS,kBAAMP,EAAMU,WAAWV,EAAMS,QAA9C,0BCfO,SAASE,EAASX,GAAQ,IAAD,EACZY,mBAAS,IADG,mBAC/BC,EAD+B,KACxBC,EADwB,KAUtC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACGJ,IACLC,EAASD,GACTb,EAAMkB,QAAQL,GACdC,EAAS,MAIT,SACE,uBACEK,KAAK,OACLC,YAAY,qBACZnB,UAAU,QACVY,MAAOA,EACPQ,SAAU,SAACL,GACTF,EAASE,EAAEM,OAAOT,Y,MCuCbU,MAtDf,WAAgB,IAAD,EACaX,mBAAS,CACjC,CACEN,KAAM,iBACND,aAAa,GAEf,CACEC,KAAM,iBACND,aAAa,GAEf,CACEC,KAAM,mBACND,aAAa,KAZJ,mBACNmB,EADM,KACCC,EADD,KAqBPjB,EAAe,SAACC,GACpB,IAAMiB,EAAQ,YAAOF,GACrBE,EAASjB,GAAOJ,aAAeqB,EAASjB,GAAOJ,YAC/CoB,EAASC,IAGLhB,EAAa,SAACD,GAClB,IAAMiB,EAAQ,YAAOF,GACrBE,EAASC,OAAOlB,EAAO,GACvBgB,EAASC,IAGX,OACE,sBAAKzB,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,uBACA,sBAAKA,UAAU,YAAf,UACGuB,EAAMI,KAAI,SAACxB,EAAMK,GAAP,OACT,cAACV,EAAD,CAEEU,MAAOA,EACPL,KAAMA,EACNI,aAAcA,EACdE,WAAYA,EACZc,MAAOA,EACPC,SAAUA,GANLhB,MAST,cAACE,EAAD,CAAUO,QAhCA,SAACZ,GACf,IAAMoB,EAAQ,sBAAOF,GAAP,CAAc,CAAElB,OAAMD,aAAa,KACjDoB,EAASC,aCXEG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a9cd7de2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Todo(props) {\r\n  return (\r\n    <div\r\n      className=\"todo\"\r\n      style={{\r\n        textDecoration: props.todo.isCompleted\r\n          ? \"line-through 2px red\"\r\n          : \"none\",\r\n      }}\r\n    >\r\n      <div className=\"content\">{props.todo.text}</div>\r\n      <div className=\"buttons\">\r\n        <button onClick={() => props.completeTodo(props.index)}>\r\n          {props.todo.isCompleted ? \"Undo\" : \"Completed\"}\r\n        </button>\r\n        <button onClick={() => props.deleteTodo(props.index)}>Delete</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TodoForm(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    setValue(value);\r\n    props.addTodo(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add your chores...\"\r\n        className=\"input\"\r\n        value={value}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      text: \"Learn useState\",\n      isCompleted: true,\n    },\n    {\n      text: \"Make todo list\",\n      isCompleted: true,\n    },\n    {\n      text: \"Put it on github\",\n      isCompleted: true,\n    },\n  ]);\n\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text, isCompleted: false }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">Todo list</h1>\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            deleteTodo={deleteTodo}\n            todos={todos}\n            setTodos={setTodos}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}